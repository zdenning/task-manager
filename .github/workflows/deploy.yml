name: Deploy to EKS

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: '17'

      - name: Build JAR for task-manager-api
        working-directory: ./task-manager-api
        run: mvn clean package

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Update kubeconfig
        run: aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Build, tag, and push image
        working-directory: ./task-manager-api
        env:
          ECR_REPO: ${{ secrets.ECR_REPOSITORY }}
        run: |
          IMAGE_URI=$(aws ecr describe-repositories --repository-names "$ECR_REPO" --query 'repositories[0].repositoryUri' --output text)
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Update Kubernetes manifests
        working-directory: ./task-manager-api
        run: |
          sed -i "s|<IMAGE_URI>|${IMAGE_URI}|g" deployment.yaml

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Apply manifests
        working-directory: ./task-manager-api
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
